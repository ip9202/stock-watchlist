#!/usr/bin/env python3
"""
Korean Stock Name Mapping
한국 주식 종목명 매핑 데이터
"""

# 주요 한국 주식 종목의 한국어 이름 매핑
KOREAN_STOCK_NAMES = {
    # 대형주
    '005930': '삼성전자',
    '000660': 'SK하이닉스',
    '035420': '네이버',
    '005935': '삼성전자우',
    '207940': '삼성바이오로직스',
    '005380': '현대차',
    '051910': 'LG화학',
    '006400': '삼성SDI',
    '028260': '삼성물산',
    '035720': '카카오',
    '068270': '셀트리온',
    '003670': '포스코홀딩스',
    '096770': 'SK이노베이션',
    '323410': '카카오뱅크',
    '000270': '기아',
    '105560': 'KB금융',
    '055550': '신한지주',
    '017670': 'SK텔레콤',
    '012330': '현대모비스',
    '032830': '삼성생명',
    
    # 중형주
    '066570': 'LG전자',
    '015760': '한국전력',
    '018260': '삼성에스디에스',
    '009150': '삼성전기',
    '011200': 'HMM',
    '034730': 'SK',
    '030200': 'KT',
    '003550': 'LG',
    '086790': '하나금융지주',
    '316140': '우리금융지주',
    '009540': 'HD현대중공업',
    '024110': '기업은행',
    '011070': 'LG이노텍',
    '161390': '한국타이어앤테크놀로지',
    '000810': '삼성화재',
    '014680': '한솔케미칼',
    '047050': '포스코인터내셔널',
    '034220': 'LG디스플레이',
    '010950': 'S-Oil',
    '011780': '금호석유',
    
    # 소형주 및 기타
    '000720': '현대건설',
    '001570': '금양',
    '002790': '아모레G',
    '004020': '현대제철',
    '009830': '한화솔루션',
    '010140': '삼성중공업',
    '011170': '롯데케미칼',
    '016360': '삼성증권',
    '018880': '한온시스템',
    '028670': '팬오션',
    '036570': '엔씨소프트',
    '047810': '한국항공우주',
    '051900': 'LG생활건강',
    '078930': 'GS',
    '090430': '아모레퍼시픽',
    '097950': 'CJ제일제당',
    '139480': '이마트',
    '180640': '한진칼',
    '267250': 'HD현대',
    '271560': '오리온',
    
    # 바이오/제약
    '007570': '일양약품',
    '196170': '알테오젠',
    '302440': '셀투리온',
    '085660': '차바이오텍',
    '145020': '휴젤',
    '214420': '토니모리',
    '950210': '프레스티지바이오파마',
    '358570': '지코',
    '099320': '쎄트렉아이',
    '950140': '잉글우드랩',
    
    # IT/게임
    '078340': '컴투스',
    '112040': '위메이드',
    '293490': '카카오게임즈',
    '251270': '넷마블',
    '036420': 'KTcs',
    '047560': '이스트소프트',
    '060250': 'NHN KCP',
    '181710': 'NHN',
    '054780': '키이스트',
    
    # 금융
    '138040': '메리츠금융지주',
    '175330': 'JB금융지주',
    '029780': '삼성카드',
    '003410': '쌍용C&E',
    
    # 유통/서비스
    '282330': 'BGF리테일',
    '002350': '넥센타이어',
    '081660': '휠라홀딩스',
    '192820': '코스맥스',
    '214150': '클래시스',
    '000120': 'CJ대한통운',
    
    # ETF (상장지수펀드)
    '069500': 'KODEX 200',
    '114800': 'KODEX 인버스',
    '122630': 'KODEX 레버리지',
    '233740': 'KODEX 코스닥150',
    '251340': 'KODEX 코스닥150선물인버스',
    '229200': 'KODEX 코스닥150레버리지',
    '102110': 'TIGER 200',
    '102960': 'TIGER 200커버드콜',
    '139220': 'TIGER 200선물인버스2X',
    '139230': 'TIGER 200선물레버리지',
    '091160': 'KODEX 반도체',
    '091180': 'KODEX 자동차',
    '117700': 'KODEX 2차전지산업',
    '091170': 'KODEX 은행',
    '278530': 'KODEX 200중소형',
    '253150': 'KODEX 코스닥150 F-인버스',
    '253160': 'KODEX 코스닥150 F-레버리지',
    '148020': 'KBSTAR 200',
    '261220': 'KODEX WTI원유선물',
    '130680': 'TIGER 원달러선물',
    '195920': 'TIGER 200IT',
    '182490': 'TIGER 200건설',
    '183700': 'TIGER 200에너지화학',
    '185680': 'TIGER 200금융',
    '222080': 'TIGER 코스닥150',
    '261270': 'KODEX 골드선물(H)',
    '293180': 'KODEX 미국S&P500TR',
    '360750': 'TIGER 미국S&P500',
    '381180': 'TIGER 미국나스닥100',
    '368590': 'TIGER 글로벌AI테크',
    '465780': 'KODEX K-배터리&자동차',
    '446450': 'KODEX K-디지털인프라',
    '379780': 'KODEX 미국S&P500(H)',
    '449770': 'KODEX 미국나스닥100(H)'
}

def get_korean_name(symbol):
    """
    종목코드로 한국어 이름을 가져옵니다.
    
    Args:
        symbol (str): 종목코드 (예: '005930')
    
    Returns:
        str: 한국어 종목명 또는 None
    """
    return KOREAN_STOCK_NAMES.get(symbol)

def add_korean_name(symbol, korean_name):
    """
    새로운 종목의 한국어 이름을 추가합니다.
    
    Args:
        symbol (str): 종목코드
        korean_name (str): 한국어 종목명
    """
    KOREAN_STOCK_NAMES[symbol] = korean_name

def get_all_symbols():
    """
    모든 등록된 종목코드를 반환합니다.
    
    Returns:
        list: 종목코드 리스트
    """
    return list(KOREAN_STOCK_NAMES.keys())

def search_by_korean_name(korean_name):
    """
    한국어 이름으로 종목코드를 검색합니다.
    
    Args:
        korean_name (str): 검색할 한국어 종목명
    
    Returns:
        list: 매칭되는 (종목코드, 종목명) 튜플 리스트
    """
    results = []
    for symbol, name in KOREAN_STOCK_NAMES.items():
        if korean_name.lower() in name.lower():
            results.append((symbol, name))
    return results